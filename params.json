{"name":"SimLAB","tagline":"A MATLAB physics simulator that utilizes the Bullet Physics Engine. ","body":"---------------------------------\r\nSimLAB\r\n---------------------------------\r\nAuthor: Brandon Minor (@bminortx)\r\n\r\nThis program's goal is to allow for convenient use of the MATLAB libraries while also guaranteeing accurate simulation through Bullet Physics, a fully functional and reliable engine.\r\n\r\n###Setup\r\n\r\nSimLAB only requires a couple of things: \r\n  * MATLAB\r\n  * Bullet Physics Library: http://bulletphysics.org/wordpress/\r\n  * Eigen Linear Algebra Library: http://bit.ly/LXBsEr\r\n  * Boost C++ Libraries: http://www.boost.org/\r\n  \r\nInstall all of these; order doesn't really matter here.\r\n\r\nOnce this is done, open SETUP.m in the top directory. After the comments, you should see these lines: \r\n\r\n```BULLET_DIR = '/Users/Trystan/Code/Builds/Bullet/src/';```\r\n\r\n```BULLET_SRC = '/Users/Trystan/Code/Thirdparty/bullet-2.81-rev2613/src/';```\r\n\r\n```BOOST_DIR = '/usr/local/include';```\r\n\r\n```EIGEN_DIR = '/usr/local/include/eigen3';```\r\n\r\nReplace the strings after the variable names with your own paths, for each respective library. Add the SimLAB folder and all subdirectories to your path. After that, everything should work!\r\n\r\n###Demos\r\n\r\nEach demo has the same GUI (displayed at startup), but they showcase different things: \r\n\r\n- BulletDemo: Shows off how easy it is to add shapes and constraints to the scene. \r\n- VehicleDemo: Demonstrates a Bullet RaycastVehicle.\r\n- OptimizerDemo: Seeks to perform Gauss-Newton optimization on a path. Still pretty buggy; I would stay away for now.\r\n\r\nEvery function in every directory should have a bit of documentation involved, so just type 'help [name of function]' to look up usage and arguments for everything. Some of the constraints are a bit tricky, so this might help. \r\n\r\n###Contribute\r\n\r\nThis documentation will continue to expand as things become available. I published this on GitHub in the hopes that it would become a robust library with the help of the community. With that in mind, if you have a feature that you would like to add to SimLAB, go to the issues page on the GitHub repo and file something in. If you want to be even more hands-on, fork this repo and run a pull request with your feature included. Odds are, it'll get added into the system. \r\n\r\n###Other Things\r\n\r\nCheck out my other libraries at my github page: @bminortx. I've been actively updating another physics library written in C++, [SimBA](https://github.com/arpg/simba). This project is much more advanced, but offers a more diverse skill set as well. Check it out if you're interested. \r\n\r\n###The MIT License (MIT)\r\n\r\nCopyright (c) 2014, Brandon Minor\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.","google":"UA-51635732-2","note":"Don't delete this file! It's used internally to help with page regeneration."}